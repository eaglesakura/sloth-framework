/**
 * 3.25.0.x  : フレームワーク全体を再構成
 * 3.25.1.x  : AS3.0対応
 * 3.25.2.x  : バージョン命名規約にTAGを加えた
 * 4.0.x     : Android O(API26)対応, Android Architecture Components対応, バージョン命名からAPIレベルを削除
 */
def ARTIFACT_VERSION = System.env.CIRCLE_TAG == null ?
        "4.0" : System.env.CIRCLE_TAG.substring(System.env.CIRCLE_TAG.indexOf('v') + 1)
def REPOSITORY_NAME = "maven"
def BINTRAY_LICENSES = ["MIT"]
def BINTRAY_LABELS = ["android"]
def BINTRAY_API_KEY = System.env.BINTRAY_API_KEY
def BINTRAY_GPG_PASS = System.env.BINTRAY_GPG_PASS

buildscript {
    repositories {
        jcenter()
        maven { url "https://maven.google.com" }
        maven { url "https://dl.bintray.com/eaglesakura/maven/" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.0-alpha4'
        classpath "com.eaglesakura:plugin-ci-support:1.2.200"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'

        classpath "com.eaglesakura:sloth-plugin:1.0.13"
    }
}

repositories {
    jcenter()
    maven { url "https://maven.google.com" }
    maven { url "https://dl.bintray.com/eaglesakura/maven/" }
}

apply plugin: 'com.android.library'
apply plugin: 'com.eaglesakura.sloth.prop' /* Generate App Properties */
group = "com.eaglesakura"
version = ARTIFACT_VERSION + getArtifactVersionSuffix()


props {
    output file("src/main/gen/java")
    configOutput file("src/main/res/raw")
    property file("configs/sloth_system_properties.yaml"), "com.eaglesakura.sloth.gen"
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    defaultConfig {
        minSdkVersion 15      // 現実的な対応ラインとしてAndroid 4.0.4とする
        targetSdkVersion 26
        consumerProguardFiles 'proguard-rules.pro'
        // Device Test
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"    // JUnit4
    }

    sourceSets {
        main {
            java.srcDirs += [
                    "src/main/gen/java",
            ]
        }
    }

    lintOptions {
        disable "NewApi"    // try-with-resource等
    }
}

configurations {
    all*.exclude group: "com.google.code.findbugs", module: "jsr305"
    all*.exclude group: "org.apache.httpcomponents", module: "httpclient"

    // not using okhttp
    all*.exclude group: "com.squareup.okhttp3", module: "okhttp"
}


dependencies {
    compile "com.eaglesakura:android-commons:2.3.1"
    compile "com.eaglesakura:cerberus:3.0.1"
    compile "com.eaglesakura:android-text-kvs:2.4.0"
    compile "com.eaglesakura:alternet:2.3.2"
    compile "com.eaglesakura:onactivityresult-invoke:1.3.0"
    compile "com.eaglesakura:small-aquery:1.3.0"
    compile "com.eaglesakura:margarineknife:1.5.0"
    compile "com.eaglesakura:simple-logger:2.1.0"
    compile "com.eaglesakura:garnet:1.2.0"
    compile "com.eaglesakura:light-saver:1.4.1"

    androidTestImplementation "com.eaglesakura:android-devicetest-support:2.3.0"
    testImplementation "com.eaglesakura:android-unittest-support:1.6.0"

    /**
     * support libs
     */
    implementation "com.android.support:support-v4:26.0.0-beta2"
    implementation "com.android.support:appcompat-v7:26.0.0-beta2"
    implementation "com.android.support:cardview-v7:26.0.0-beta2"
    implementation "com.android.support:recyclerview-v7:26.0.0-beta2"
//    implementation "com.android.support:palette-v7:26.0.0-beta2"
    implementation "com.android.support:design:26.0.0-beta2"
    implementation "com.android.support:support-annotations:26.0.0-beta2"

    /**
     * Android Architecture Components
     */
    implementation "android.arch.lifecycle:runtime:1.0.0-alpha3"
    implementation "android.arch.lifecycle:extensions:1.0.0-alpha3"
    annotationProcessor "android.arch.lifecycle:compiler:1.0.0-alpha3"

    // Room O/R Mapper
    implementation "android.arch.persistence.room:runtime:1.0.0-alpha3"

    /**
     * Smooth ProgressBar / 160 Method
     * https://github.com/castorflex/SmoothProgressBar
     */
    compile 'com.github.castorflex.smoothprogressbar:library:1.1.0'

    /**
     * RecyclerView / 65 Method
     * https://github.com/timehop/sticky-headers-recyclerview
     */
    compile 'com.timehop.stickyheadersrecyclerview:library:0.4.3@aar'

    /**
     * Runtime Event Bus/ 75 Method
     * Optional / 23 Method
     */
    compile 'com.squareup:otto:1.3.8'
    compile('com.eccyan:rxjava-optional:1.1.2') {
        exclude(group: "io.reactivex", module: "rxjava")
    }

    /**
     * Scroll Event Handle / 275
     * https://github.com/ksoichiro/Android-ObservableScrollView
     */
    compile 'com.github.ksoichiro:android-observablescrollview:1.6.0'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

android.libraryVariants.all { variant ->
    if (!"release".equals(variant.name) || "".equals(ARTIFACT_VERSION)) {
        return;
    }

    task("javadoc", type: Javadoc) {
        title = "${file(".").name} ver ${ARTIFACT_VERSION}"
        description "Generates Android Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"

        classpath =
//                files(variant.javaCompile.classpath.files) +
                files(ext.androidJar) +
                        files("build/intermediates/classes/${variant.name}/") +
                        fileTree("build/intermediates/exploded-aar").include("**/*.jar")

        options.links("http://docs.oracle.com/javase/7/docs/api/");
        options.links("http://d.android.com/reference/");
        exclude '**/BuildConfig.java'
        exclude '**/*Dao.java' /* ignore greenDAO */
        exclude '**/DaoMaster.java' /* ignore greenDAO */
        exclude '**/DaoSession.java' /* ignore greenDAO */
        exclude '**/R.java' /* ignore greenDAO */

        options.addStringOption('Xdoclint:none', '-quiet')
        options.encoding = "UTF-8"
        project.configure(options) {
            memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED
            charSet = "UTF-8"
        }
    }


    task("javadocJar", type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
    }
}

/**
 * バージョンを取得する
 * CircleCIの場合、バージョン末尾にビルド番号を付与する
 */
def getArtifactVersionSuffix() {
    String CIRCLE_TAG = System.env.CIRCLE_TAG

    if (CIRCLE_TAG != null) {
        // TAGがある場合それを直接利用する
        return ""
    }

    if (System.env.CIRCLE_BUILD_NUM != null) {
        // CircleCIのバージョンが指定されているので、そちらを利用する
        return ".build-${System.env.CIRCLE_BUILD_NUM}"
    } else {
        return ".snapshot"
    }
}

apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

bintray {
    user = 'eaglesakura'
    key = BINTRAY_API_KEY
    pkg {
        repo = REPOSITORY_NAME
        name = file(".").absoluteFile.name
        licenses = BINTRAY_LICENSES
        labels = BINTRAY_LABELS
        issueTrackerUrl = "https://github.com/eaglesakura/${file(".").absoluteFile.name}/issues"
        vcsUrl = "https://github.com/eaglesakura/${file(".").absoluteFile.name}"
        version {
            name = project.version
            released = new Date()
            gpg {
                sign = true
                passphrase = BINTRAY_GPG_PASS
            }
        }
    }
    configurations = ['archives']
}
