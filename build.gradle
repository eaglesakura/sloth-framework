/**
 * 3.25.0.x  : フレームワーク全体を再構成
 * 3.25.1.x  : AS3.0対応
 */
def ARTIFACT_VERSION = "3.25.1"
def REPOSITORY_NAME = "maven"
def BINTRAY_LICENSES = ["MIT"]
def BINTRAY_LABELS = ["android"]
def BINTRAY_API_KEY = System.env.BINTRAY_API_KEY
def BINTRAY_GPG_PASS = System.env.BINTRAY_GPG_PASS

buildscript {
    repositories {
        jcenter()
        maven { url "https://maven.google.com" }
        maven { url "https://dl.bintray.com/eaglesakura/maven/" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.0-alpha1'
        classpath "com.eaglesakura:plugin-ci-support:1.2.200"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'

        classpath "com.eaglesakura:sloth-plugin:1.0.13"
    }
}

repositories {
    jcenter()
    maven { url "https://maven.google.com" }
    maven { url "https://dl.bintray.com/eaglesakura/maven/" }
}

apply plugin: 'com.android.library'
apply plugin: 'com.eaglesakura.sloth.prop' /* Generate App Properties */
group = "com.eaglesakura"
version = ARTIFACT_VERSION + getArtifactVersionSuffix()


props {
    output file("src/main/gen/java")
    configOutput file("src/main/res/raw")
    property file("configs/sloth_system_properties.yaml"), "com.eaglesakura.sloth.gen"
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }
    
    defaultConfig {
        minSdkVersion 15      // 現実的な対応ラインとしてAndroid 4.0.4とする
        targetSdkVersion 25
        consumerProguardFiles 'proguard-rules.pro'
        // Device Test
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"    // JUnit4
    }

    sourceSets {
        main {
            java.srcDirs += [
                    "src/main/gen/java",
            ]
        }
    }

    lintOptions {
        disable "NewApi"    // try-with-resource等
    }
}

// Local or maven
if (!hasProperty("EGLIBRARY_COMPILE_LOCAL")) {
    ext.EGLIBRARY_COMPILE_LOCAL = false
}

configurations {
    all*.exclude group: "com.google.code.findbugs", module: "jsr305"
    all*.exclude group: "org.apache.httpcomponents", module: "httpclient"

    // not using okhttp
    all*.exclude group: "com.squareup.okhttp3", module: "okhttp"
}


dependencies {
    if (EGLIBRARY_COMPILE_LOCAL) {
        implementation project(':eglibrary:simple-logger')
        implementation project(':eglibrary:android-command-service')
        implementation project(':eglibrary:android-text-kvs')
        implementation project(':eglibrary:alternet')
        implementation project(':eglibrary:onactivityresult-invoke')
        implementation project(':eglibrary:small-aquery')
        implementation project(':eglibrary:cerberus')
        implementation project(':eglibrary:margarineknife')
        implementation project(':eglibrary:garnet')
        implementation project(':eglibrary:light-saver')

        androidTestImplementation project(":eglibrary:android-devicetest-support")
        testImplementation project(":eglibrary:android-unittest-support")
    } else {
        implementation "com.eaglesakura:simple-logger:2.0.463"
        implementation "com.eaglesakura:android-commons:2.1.5"
        implementation "com.eaglesakura:android-command-service:1.3.462"
        implementation "com.eaglesakura:android-text-kvs:2.2.450"
        implementation "com.eaglesakura:alternet:2.1.8"
        implementation "com.eaglesakura:onactivityresult-invoke:1.1.460"
        implementation "com.eaglesakura:small-aquery:1.1.63"
        implementation "com.eaglesakura:cerberus:2.3.5"
        implementation "com.eaglesakura:margarineknife:1.3.246"
        implementation "com.eaglesakura:garnet:1.0.195"
        implementation "com.eaglesakura:light-saver:1.1.107"

        androidTestImplementation "com.eaglesakura:android-devicetest-support:2.1.272"
        testImplementation "com.eaglesakura:android-unittest-support:1.4.207"
    }

    /**
     * support libs
     */
    implementation "com.android.support:support-v4:25.3.1"
    implementation "com.android.support:appcompat-v7:25.3.1"
    implementation "com.android.support:cardview-v7:25.3.1"
    implementation "com.android.support:recyclerview-v7:25.3.1"
//    implementation "com.android.support:palette-v7:25.3.1"
    implementation "com.android.support:design:25.3.1"

    implementation "com.android.support:support-annotations:25.3.1"

    /**
     * Smooth ProgressBar / 160 Method
     * https://github.com/castorflex/SmoothProgressBar
     */
    implementation 'com.github.castorflex.smoothprogressbar:library:1.1.0'

    /**
     * RecyclerView / 65 Method
     * https://github.com/timehop/sticky-headers-recyclerview
     */
    implementation 'com.timehop.stickyheadersrecyclerview:library:0.4.3@aar'

    /**
     * Runtime Event Bus/ 75 Method
     * Optional / 23 Method
     */
    implementation 'com.squareup:otto:1.3.8'
    implementation 'com.eccyan:rxjava-optional:1.1.2'

    /**
     * Scroll Event Handle / 275
     * https://github.com/ksoichiro/Android-ObservableScrollView
     */
    implementation 'com.github.ksoichiro:android-observablescrollview:1.6.0'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

android.libraryVariants.all { variant ->
    if (!"release".equals(variant.name) || "".equals(ARTIFACT_VERSION)) {
        return;
    }

    task("javadoc", type: Javadoc) {
        title = "${file(".").name} ver ${ARTIFACT_VERSION}"
        description "Generates Android Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"

        classpath = files(variant.javaCompile.classpath.files) +
                files(ext.androidJar) +
                files("build/intermediates/classes/${variant.name}/") +
                fileTree("build/intermediates/exploded-aar").include("**/*.jar")

        options.links("http://docs.oracle.com/javase/7/docs/api/");
        options.links("http://d.android.com/reference/");
        exclude '**/BuildConfig.java'
        exclude '**/*Dao.java' /* ignore greenDAO */
        exclude '**/DaoMaster.java' /* ignore greenDAO */
        exclude '**/DaoSession.java' /* ignore greenDAO */
        exclude '**/R.java' /* ignore greenDAO */

        options.addStringOption('Xdoclint:none', '-quiet')
        options.encoding = "UTF-8"
        project.configure(options) {
            memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED
            charSet = "UTF-8"
        }
    }


    task("javadocJar", type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
    }
}

/**
 * バージョンを取得する
 * CircleCIの場合、バージョン末尾にビルド番号を付与する
 */
def getArtifactVersionSuffix() {
    if (System.env.CIRCLE_BUILD_NUM != null) {
        // CircleCIのバージョンが指定されているので、そちらを利用する
        return ".${System.env.CIRCLE_BUILD_NUM}"
    } else {
        return ".snapshot"
    }
}

apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

bintray {
    user = 'eaglesakura'
    key = BINTRAY_API_KEY
    pkg {
        repo = REPOSITORY_NAME
        name = file(".").absoluteFile.name
        licenses = BINTRAY_LICENSES
        labels = BINTRAY_LABELS
        issueTrackerUrl = "https://github.com/eaglesakura/${file(".").absoluteFile.name}/issues"
        vcsUrl = "https://github.com/eaglesakura/${file(".").absoluteFile.name}"
        version {
            name = project.version
            released = new Date()
            gpg {
                sign = true
                passphrase = BINTRAY_GPG_PASS
            }
        }
    }
    configurations = ['archives']
}
